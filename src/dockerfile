FROM dustynv/ros:melodic-ros-base-l4t-r32.6.1

ARG OPENCV_VERSION=4.3.0

USER root

LABEL maintainer="sasanka.panchamukhi@bp.com"


RUN apt-get update && \
    apt-get install -y --no-install-recommends \
          python-rosdep \
          python-rosinstall \
          python-rosinstall-generator \
          python-wstool \
          build-essential \
          unzip \
          yasm \
          pkg-config \
          libavcodec-dev \
          libavformat-dev \
          libswscale-dev \
          libgtk2.0-dev \
          libgtk-3-dev \
          libtbb2 \
        libtbb-dev \
        libjpeg-dev \
        libpng-dev \
        libtiff-dev \
        libavformat-dev \
        libpq-dev \
        libxine2-dev \
        libglew-dev \
        libtiff5-dev \
        zlib1g-dev \
        libjpeg-dev \
        libavutil-dev \
        libpostproc-dev \
        libeigen3-dev 

RUN apt-get install -y  python3-opencv python3-setuptools python-traitlets python-catkin-tools python3-dev python3-rospkg-modules python3-catkin-pkg-modules python3-numpy python3-yaml ros-melodic-catkin  && rm -rf /var/lib/apt/lists/*
       
RUN mkdir -p catkin_ws/src


RUN cd /opt/ &&\
    # Download and unzip OpenCV and opencv_contrib and delte zip files
    wget https://github.com/opencv/opencv/archive/$OPENCV_VERSION.zip &&\
    unzip $OPENCV_VERSION.zip &&\
    rm $OPENCV_VERSION.zip &&\
    wget https://github.com/opencv/opencv_contrib/archive/$OPENCV_VERSION.zip &&\
    unzip ${OPENCV_VERSION}.zip &&\
    rm ${OPENCV_VERSION}.zip &&\
    # Create build folder and switch to it
    mkdir /opt/opencv-${OPENCV_VERSION}/build && cd /opt/opencv-${OPENCV_VERSION}/build &&\
    # Cmake configure
    cmake \
        -DOPENCV_EXTRA_MODULES_PATH=/opt/opencv_contrib-${OPENCV_VERSION}/modules \
        -DCMAKE_BUILD_TYPE=RELEASE \
        # Install path will be /usr/local/lib (lib is implicit)
        -DCMAKE_INSTALL_PREFIX=/usr/local \
        .. &&\
    # Make
    make -j"$(nproc)" && \
    # Install to /usr/local/lib
    make install && \
    ldconfig &&\
    # Remove OpenCV sources and build folder
    rm -rf /opt/opencv-${OPENCV_VERSION} && rm -rf /opt/opencv_contrib-${OPENCV_VERSION}



# WORKDIR /cv_bridge_ws



# RUN . /opt/ros/melodic/setup.sh && catkin init

RUN export ROS_PYTHON_VERSION=3

WORKDIR /catkin_ws

RUN . /opt/ros/melodic/setup.sh && catkin config -DPYTHON_EXECUTABLE=/usr/bin/python3 -DPYTHON_INCLUDE_DIR=/usr/include/python3.6m -DPYTHON_LIBRARY=/usr/lib/aarch64-linux-gnu/libpython3.6m.so

# RUN . /opt/ros/melodic/setup.sh && catkin config --install

RUN git clone -b noetic https://github.com/ros-perception/vision_opencv.git src/vision_opencv


RUN sed --in-place 's/python37/python3/g' src/vision_opencv/cv_bridge/CMakeLists.txt

# RUN . /opt/ros/melodic/setup.sh && catkin build cv_bridge

# RUN echo 'source /cv_bridge_ws/install/setup.bash' >> /root/.bashrc

#RUN cd install/lib/python3/dist-packages && ls

#RUN cp -a install/lib/python3/dist-packages/. /usr/lib/python3/dist-packages


RUN . /opt/ros/melodic/setup.sh &&  catkin_create_pkg jetson_cam_publisher rospy cv_bridge sensor_msgs



COPY . ./src/jetson_cam_publisher/src

RUN . /opt/ros/melodic/setup.sh && catkin_make

RUN echo 'source /catkin_ws/devel/setup.bash' >> /root/.bashrc

RUN . ~/.bashrc

CMD ["rosrun","jetson_cam_publisher","ros_usb_cam.py","/dev/video1"]





